# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)

puts "Adding standard programming languages"

Language.destroy_all # Remove every row from the languages table

Language.create name: 'Ruby', description: 'Ruby is object-oriented: every value is an object, including classes and instances of types that many other languages designate as primitives (such as integers, booleans, and "null"). Variables always hold references to objects. Every function is a method and methods are always called on an object. Methods defined at the top level scope become methods of the Object class. Since this class is an ancestor of every other class, such methods can be called on any object. They are also visible in all scopes, effectively serving as "global" procedures. Ruby supports inheritance with dynamic dispatch, mixins and singleton methods (belonging to, and defined for, a single instance rather than being defined on the class). Though Ruby does not support multiple inheritance, classes can import modules as mixins.', sample_hello_world: "# My first Ruby program\n# On my way to Ruby fame & fortune!\n\nputs 'Hello, world!'", imperative: true, object_oriented: true, functional: true, procedural: false, generic: false, reflective: true, event_driven: false, other_paradigms: 'aspect-oriented', standardized: '2011(JIS X 3017), 2012(ISO/IEC 30170)'
Language.create name: 'Javascript', description: 'JavaScript, often abbreviated as JS, is a high-level, interpreted programming language. It is a language which is also characterized as dynamic, weakly typed, prototype-based and multi-paradigm. Alongside HTML and CSS, JavaScript is one of the three core technologies of the World Wide Web. JavaScript enables interactive web pages and thus is an essential part of web applications. The vast majority of websites use it, and all major web browsers have a dedicated JavaScript engine to execute it.', sample_hello_world: "document.write('Hello, world!');", imperative: true, object_oriented: true, functional: true, procedural: true, generic: false, reflective: true, event_driven: false, other_paradigms: 'prototype-based', standardized: '1997, ECMA'
Language.create name: 'C', description: 'C is an imperative procedural language. It was designed to be compiled using a relatively straightforward compiler, to provide low-level access to memory, to provide language constructs that map efficiently to machine instructions, and to require minimal run-time support. Despite its low-level capabilities, the language was designed to encourage cross-platform programming. A standards-compliant C program that is written with portability in mind can be compiled for a very wide variety of computer platforms and operating systems with few changes to its source code. The language has become available on a very wide range of platforms, from embedded microcontrollers to supercomputers.', sample_hello_world: "#include\n\nint main(void)\n{\n\nputs('Hello, world!');\n}", imperative: true, object_oriented: true, functional: true, procedural: true, generic: true, reflective: false, event_driven: false, other_paradigms: '', standardized: '1998, ISO/IEC 1998, ISO/IEC 2003, ISO/IEC 2011,ISO/IEC 2014'
Language.create name: 'Bash', description: 'Bash is a command processor that typically runs in a text window where the user types commands that cause actions. Bash can also read and execute commands from a file, called a shell script. Like all Unix shells, it supports filename globbing (wildcard matching), piping, here documents, command substitution, variables, and control structures for condition-testing and iteration. The keywords, syntax and other basic features of the language are all copied from sh. Other features, e.g., history, are copied from csh and ksh. Bash is a POSIX-compliant shell, but with a number of extensions.', sample_hello_world: 'echo "Hello World"', imperative: true, object_oriented: false, functional: false, procedural: true, generic: false, reflective: false, event_driven: false, other_paradigms: '', standardized: ''
Language.create name: 'Lua', description: 'Lua was originally designed in 1993 as a language for extending software applications to meet the increasing demand for customization at the time. It provided the basic facilities of most procedural programming languages, but more complicated or domain-specific features were not included; rather, it included mechanisms for extending the language, allowing programmers to implement such features. As Lua was intended to be a general embeddable extension language, the designers of Lua focused on improving its speed, portability, extensibility, and ease-of-use in development.', sample_hello_world: 'print "Hello, World!"', imperative: true, object_oriented: true, functional: true, procedural: true, generic: false, reflective: true, event_driven: false, other_paradigms: 'aspect-oriented', standardized: 'No'
Language.create name: 'MATLAB', description: 'MATLAB (matrix laboratory) is a multi-paradigm numerical computing environment and proprietary programming language developed by MathWorks. MATLAB allows matrix manipulations, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs written in other languages, including C, C++, C#, Java, Fortran and Python', sample_hello_world: "disp('Hello, world!')", imperative: true, object_oriented: true, functional: false, procedural: true, generic: false, reflective: false, event_driven: false, other_paradigms: '', standardized: 'No'

puts "Created #{ Language.all.length } programming languages."

puts "Done!"
